@using Core
@using SharedLib
@inject Core.IBotController botController
@inject Core.IAddonReader addonReader
@implements IDisposable

<button class="btn btn-sm btn-primary" @onclick="ToggleBot" disabled="@(disableButton ? "disabled" : null)">
@if (!botController.IsBotActive)
{
    <span>Start Bot</span>
}
else
{
    <span>Stop Bot</span>
}
</button>

@code {

    private bool disableButton;

    protected override void OnInitialized()
    {
        if (DataFrameConfiguration.Exists())
        {
            ValidateButton();

            botController.ProfileLoaded -= OnProfileLoaded;
            botController.ProfileLoaded += OnProfileLoaded;

            addonReader.AddonDataChanged -= OnAddonDataChanged;
            addonReader.AddonDataChanged += OnAddonDataChanged;
        }
    }

    public void Dispose()
    {
        addonReader.AddonDataChanged -= OnAddonDataChanged;
        botController.ProfileLoaded -= OnProfileLoaded;
    }

    private void OnAddonDataChanged(object? s, EventArgs e)
    {
        base.InvokeAsync(StateHasChanged);
    }

    private void ToggleBot()
    {
        botController.ToggleBotStatus();
    }

    private void OnProfileLoaded(object? sender, EventArgs e)
    {
        ValidateButton();
    }

    private void ValidateButton()
    {
        disableButton = string.IsNullOrEmpty(botController.SelectedClassFilename);
    }
}