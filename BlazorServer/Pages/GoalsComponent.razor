@using Core
@inject Core.IBotController botController
@inject Core.IAddonReader addonReader

<div class="card" style="margin-top: 10px">
    <div class="card-header">
        Goals -> @addonReader.PlayerReader.MinRange - @addonReader.PlayerReader.MaxRange
        | Expand <input type="checkbox" @bind="@Expand" />
        <span class="float-right">Update: @addonReader.AvgUpdateLatency.ToString("0.00") ms</span>
    </div>
    @if (ShowGoals)
    {
        <div class="card-body">
            <table class="table table-sm table-striped">
                @if (botController.GoapAgent != null)
                {
                    foreach (var goal in botController.GoapAgent.AvailableGoals)
                    {
                        <GoapGoalView goal="goal" IsSelected="(goal == botController.GoapAgent.CurrentGoal)" Expand="@(Expand || goal.GetType().Name == "ParallelGoal")" />
                    }
                }
            </table>
        </div>
    }
</div>

@using SharedLib; 
@code {

    [Parameter]
    public bool ShowGoals { get; set; } = true;

    public bool Expand { get; set; } = false;

    protected override void OnInitialized()
    {
        if (DataFrameConfiguration.Exists())
        {
            ((Core.AddonReader)addonReader).AddonDataChanged += (o, e) =>
            {
                base.InvokeAsync(() =>
                {
                    try
                    {
                        StateHasChanged();
                    }
                    catch { }
                });
            };
        }
    }
}